stages:
  - generate
  - deploy

.deploy_template:
  image: python:3.9
  stage: deploy
  before_script:
    - pip install --quiet awscli

auto_generate_configs:
  image: python:3.9
  stage: generate
  before_script:
    - apt-get update -y && apt-get install -y make git
  script:
    - make build env=all
    - |
      if ! git diff --quiet; then
        git config user.email "${GITLAB_USER_EMAIL:-ci@example.com}"
        git config user.name "${GITLAB_USER_NAME:-CI}"
        git add configs
        git commit -m "ci: auto-generate configs"
        git push https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git HEAD:${CI_COMMIT_BRANCH}
        echo "Generated configs updated, stopping pipeline"
        exit 1
      fi
  rules:
    - changes:
        - config-overrides/**/*
      when: on_success
    - when: never

deploy_test_configs:
  extends: .deploy_template
  script:
    - aws s3 sync configs/test s3://thetradedesk-mlplatform-us-east-1/configdata/confetti/configs/test/
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - configs/test/**/*
        - config-overrides/test/**/*
      when: on_success
    - when: never

# prod are force to sync in clean status.
deploy_prod_configs:
  extends: .deploy_template
  script:
    - aws s3 sync configs/prod s3://thetradedesk-mlplatform-us-east-1/configdata/confetti/configs/prod/ --delete
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - configs/prod/**/*
        - config-overrides/prod/**/*
      when: on_success
    - when: never

# experiment are force to sync in clean status.
deploy_experiment_configs:
  extends: .deploy_template
  script:
    - aws s3 sync configs/experiment s3://thetradedesk-mlplatform-us-east-1/configdata/confetti/configs/experiment/ --delete
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - configs/experiment/**/*
        - config-overrides/experiment/**/*
      when: on_success
    - when: never
